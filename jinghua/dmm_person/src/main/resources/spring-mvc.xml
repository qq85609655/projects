<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
  http://www.springframework.org/schema/beans/spring-beans.xsd
  http://www.springframework.org/schema/mvc
  http://www.springframework.org/schema/mvc/spring-mvc.xsd
  http://www.springframework.org/schema/context
  http://www.springframework.org/schema/context/spring-context.xsd">
        
        
        
    <!-- 注解依赖的适配器 DefaultAnnotationHandlerMapping -->  
	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />
	
	<!-- Spring @AutoWired 依赖自动注入,不需要setter方法 -->  
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />

    <!-- 开启controller注解支持-->
    <context:component-scan base-package="com.jhnu" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan> 
    
   <mvc:annotation-driven>
    	<mvc:message-converters register-defaults="false">
       	 <bean id="jacksonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
    	</mvc:message-converters>
	</mvc:annotation-driven>

	<!-- 当在web.xml 中   DispatcherServlet使用 <url-pattern>/</url-pattern> 映射时，能映射静态资源 -->
    <mvc:default-servlet-handler/>

	<!-- 视图文件解析配置 -->
	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="mediaTypes">
		    <map>
		        <entry key="xml" value="application/xml"/>
		        <entry key="html" value="text/html"/>
		    </map>
		</property>
		<property name="viewResolvers">
		    <list>
		        <bean class="org.springframework.web.servlet.view.BeanNameViewResolver"/>
		        <bean id="viewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
					<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
					<property name="prefix" value="/WEB-INF/jsp/"/>
					<property name="suffix" value=".jsp"/>
				</bean>
		    </list>
		</property>
	</bean>
	
	<!-- 引入shiro的MVC配置 -->
<!-- 	<import resource="spring-mvc-shiro.xml"/> -->
<!-- 	<mvc:interceptors>    
    <mvc:interceptor>    
        匹配的是url路径， 如果不配置或/**,将拦截所有的Controller  
        <mvc:mapping path="/tea/**" />  
        <mvc:mapping path="/stu/**" />  
        <bean class="com.jhnu.person.sys.PersonInterceptor"></bean>    
    </mvc:interceptor>  
    当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法  
</mvc:interceptors>   -->
</beans>
