<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
    xmlns:task="http://www.springframework.org/schema/task"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
       http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd ">
        
   <!--******** 把标记了@Controller注解的类转换为bean ********-->
	<context:annotation-config />
	<context:component-scan base-package="cn.gilight" />
	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>text/html;charset=UTF-8</value>
						</list>
					</property>
				</bean>
			</list>
		</property>
	</bean>

	<!-- tomcat 默认是default，如果是其他服务器，请查阅资料 -->
	<mvc:default-servlet-handler default-servlet-name="default" />

	<!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" p:prefix="/" p:suffix=".jsp" />
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" p:defaultEncoding="utf-8" />

	<!-- 启动注解驱动的Spring MVC功能，注册请求url和注解POJO类方法的映射 方便加拦截器以下面方面声明标注 -->
	<mvc:annotation-driven />
	<!-- 拦截器配置，如果涉及到权限相关，可以通过拦截器进行过滤 -->
	<!-- <mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="com.jhkj.filter.TestFilter"></bean>
		</mvc:interceptor>
	</mvc:interceptors> -->
	   
		
<!--数据源，采用apache数据库连接池 -->
	<bean id="dataSource" 
		class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${dataSource.driver.base}" />
		<property name="url" value="${dataSource.url.base}" />
		<property name="username" value="${dataSource.username.base}" />
		<property name="password" value="${dataSource.password.base}" />
		<property name="initialSize" value="5"/>   
    	<property name="maxIdle" value="30"/>   
    	<property name="maxActive" value="50"/>   
    	<property name="maxWait" value="6000"/>   
    	<property name="testOnBorrow" value="true"/>   
    	<property name="testOnReturn" value="true"/>   
    	<property name="testWhileIdle" value="true"/>
    	<property name="logAbandoned" value="${dataSource.logAbandoned}"/>
    	<property name="removeAbandoned" value="${dataSource.removeAbandoned}"/>
    	<property name="removeAbandonedTimeout" value="${dataSource.removeAbandonedTimeout}"/>   
    	<property name="validationQuery" value="SELECT COUNT(*) FROM DUAL"/>   
    	<property name="minEvictableIdleTimeMillis" value="60000"/>   
    	<property name="timeBetweenEvictionRunsMillis" value="60000"/>   
	</bean>  
	
	
	<!-- 引入hibernate配置文件 -->
	<context:property-placeholder location="classpath:/db.properties"  /> 
	<!-- 配置会话工厂 -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.OracleDialect
				</prop>
				<!-- <prop key="hibernate.hbm2ddl.auto">update</prop> -->
				<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>
		<!-- 扫描实体类，即数据库映射对象 -->
		<property name="packagesToScan">
			<list>
				<value>cn.gilight</value>
			</list>
		</property>
	</bean> 

	<!-- 配置事务管理器 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- Spring jdbcTemplate -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 配置事务管理器 -->
	<!-- 	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>  -->
	<!-- 事物注解启动 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	<tx:annotation-driven mode="aspectj" />
	<aop:aspectj-autoproxy />
	
	
	<bean id="componentStaticRetriever" class="cn.gilight.framework.uitl.ApplicationComponentStaticRetriever"/>
</beans>